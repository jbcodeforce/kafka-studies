version: '3.7'
services:
  zookeeper:
    image: quay.io/strimzi/kafka:latest-kafka-3.4.1
    container_name: zookeeper
    hostname: zookeeper
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
  kafka-0:
    image: quay.io/strimzi/kafka:latest-kafka-3.4.1
    container_name: kafka-0
    hostname: kafka-0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} \
      --override broker.id=$${KAFKA_BROKER_ID} \
      --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} \
      --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} \
      --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME} \
      --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9095:9095"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_BROKER_ID: 0
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-0:9092,EXTERNAL://localhost:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: EXTERNAL://0.0.0.0:9095,INTERNAL://kafka-0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
  kafka-1:
    image: quay.io/strimzi/kafka:latest-kafka-3.4.1
    container_name: kafka-1
    hostname: kafka-1
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} \
      --override broker.id=$${KAFKA_BROKER_ID} \
      --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} \
      --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} \
      --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME} \
      --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: EXTERNAL://0.0.0.0:9093,INTERNAL://kafka-1:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-2:
    image: quay.io/strimzi/kafka:latest-kafka-3.4.1
    container_name: kafka-2
    hostname: kafka-2
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} \
      --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} \
      --override broker.id=$${KAFKA_BROKER_ID} \
      --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} \
      --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME} \
      --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:9092,EXTERNAL://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: EXTERNAL://0.0.0.0:9094,INTERNAL://kafka-2:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  addTopics:
    image:  quay.io/strimzi/kafka:latest-kafka-3.4.1
    depends_on:
      - kafka-0
      - kafka-1
      - kafka-2
    entrypoint: [ "bash",  "-c", "/opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-0:9092,kafka-1:9092,kafka-2:9092 --create  --if-not-exists --replication-factor 3 --partitions 1 --topic filedata 
                && /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-0:9092,kafka-1:9092,kafka-2:9092 --create  --if-not-exists --replication-factor 3 --partitions 1 --topic connect-offsets  --config cleanup.policy=compact
                && /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-0:9092,kafka-1:9092,kafka-2:9092 --create  --if-not-exists --replication-factor 3 --partitions 1 --topic connect-status --config cleanup.policy=compact
                && /opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka-0:9092,kafka-1:9092,kafka-2:9092 --create  --if-not-exists --replication-factor 3 --partitions 1 --topic connect-configs --config cleanup.policy=compact" ]
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka-0:9092,kafka-2:9092,kafka-2:29092"
    depends_on:
      - kafka
  kconnect:
    image: quay.io/strimzi/kafka:latest-kafka-3.4.1
    container_name: kconnect
    hostname: kconnect
    ports:
      - "8083:8083"
    volumes:
      - ${PWD}:/home/kafka/kconnect/
      - ${PWD}/logs:/opt/kafka/logs
    command: [
      "sh", "-c",
      "bin/connect-distributed.sh /home/kafka/kconnect/connect-distributed.properties"
    ]